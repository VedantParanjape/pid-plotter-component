<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="udp__handler_8h" kind="file" language="C++">
    <compoundname>udp_handler.h</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">sys/param.h</includes>
    <includes local="yes">freertos/FreeRTOS.h</includes>
    <includes local="yes">freertos/task.h</includes>
    <includes local="yes">freertos/event_groups.h</includes>
    <includes local="yes">esp_system.h</includes>
    <includes local="yes">esp_wifi.h</includes>
    <includes local="yes">esp_event.h</includes>
    <includes local="yes">esp_log.h</includes>
    <includes local="yes">nvs_flash.h</includes>
    <includes local="yes">esp_netif.h</includes>
    <includes local="yes">protocol_examples_common.h</includes>
    <includes local="yes">logger.h</includes>
    <includes local="yes">lwip/err.h</includes>
    <includes local="yes">lwip/sockets.h</includes>
    <includes local="yes">lwip/sys.h</includes>
    <includes local="no">lwip/netdb.h</includes>
    <includedby refid="pid__plotter_8h" local="yes">/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/pid_plotter.h</includedby>
    <includedby refid="transport_8h" local="yes">/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h</includedby>
    <includedby refid="plotter_8h" local="yes">/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/plotter.h</includedby>
    <includedby refid="udp__handler_8c" local="yes">/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/udp_handler.c</includedby>
    <incdepgraph>
      <node id="131">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="138">
        <label>nvs_flash.h</label>
      </node>
      <node id="140">
        <label>protocol_examples_common.h</label>
      </node>
      <node id="134">
        <label>esp_system.h</label>
      </node>
      <node id="139">
        <label>esp_netif.h</label>
      </node>
      <node id="135">
        <label>esp_wifi.h</label>
      </node>
      <node id="145">
        <label>lwip/netdb.h</label>
      </node>
      <node id="129">
        <label>string.h</label>
      </node>
      <node id="137">
        <label>esp_log.h</label>
      </node>
      <node id="130">
        <label>sys/param.h</label>
      </node>
      <node id="143">
        <label>lwip/sockets.h</label>
      </node>
      <node id="144">
        <label>lwip/sys.h</label>
      </node>
      <node id="142">
        <label>lwip/err.h</label>
      </node>
      <node id="136">
        <label>esp_event.h</label>
      </node>
      <node id="132">
        <label>freertos/task.h</label>
      </node>
      <node id="128">
        <label>/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/udp_handler.h</label>
        <link refid="udp__handler_8h"/>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>freertos/event_groups.h</label>
      </node>
      <node id="141">
        <label>logger.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="151">
        <label>/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/transport.c</label>
        <link refid="transport_8c"/>
      </node>
      <node id="150">
        <label>/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/plotter.c</label>
        <link refid="plotter_8c"/>
      </node>
      <node id="147">
        <label>/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/pid_plotter.h</label>
        <link refid="pid__plotter_8h"/>
      </node>
      <node id="152">
        <label>/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/udp_handler.c</label>
        <link refid="udp__handler_8c"/>
      </node>
      <node id="146">
        <label>/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/udp_handler.h</label>
        <link refid="udp__handler_8h"/>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
      </node>
      <node id="149">
        <label>/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/plotter.h</label>
        <link refid="plotter_8h"/>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
      </node>
      <node id="148">
        <label>/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h</label>
        <link refid="transport_8h"/>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structnetwork__data" prot="public">network_data</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="udp__handler_8h_1a0755be366390c472fea523dda78961d3" prot="public" static="no">
        <name>HOST_IP_ADDR</name>
        <initializer>CONFIG_UDP_IP_ADDRESS</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/udp_handler.h" line="22" column="9" bodyfile="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/udp_handler.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="udp__handler_8h_1a614217d263be1fb1a5f76e2ff7be19a2" prot="public" static="no">
        <name>PORT</name>
        <initializer>CONFIG_UDP_PORT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/udp_handler.h" line="23" column="9" bodyfile="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/udp_handler.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="udp__handler_8h_1a412aa3402fc47e327861b48a04c3c08a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void network_manager</definition>
        <argsstring>(struct network_data *nm)</argsstring>
        <name>network_manager</name>
        <param>
          <type>struct <ref refid="structnetwork__data" kindref="compound">network_data</ref> *</type>
          <declname>nm</declname>
        </param>
        <briefdescription>
<para>Manages UDP connection to the server. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nm</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structnetwork__data" kindref="compound">network_data</ref> struct which contains necessary data for a UDP connection </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/udp_handler.h" line="35" column="1" bodyfile="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/udp_handler.c" bodystart="11" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="udp__handler_8h_1a7ddbd791c1d13c96db95eba36aae6145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int send_data</definition>
        <argsstring>(struct network_data *nm, char *payload)</argsstring>
        <name>send_data</name>
        <param>
          <type>struct <ref refid="structnetwork__data" kindref="compound">network_data</ref> *</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>payload</declname>
        </param>
        <briefdescription>
<para>Sends data to the server through a UDP socket. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nm</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to <ref refid="structnetwork__data" kindref="compound">network_data</ref> struct </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload</parametername>
</parameternamelist>
<parameterdescription>
<para>char array which contains data to be sent </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int - returns -1 if sending failed, number of bytes sent if successfully sent the data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/udp_handler.h" line="36" column="1" bodyfile="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/udp_handler.c" bodystart="38" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="udp__handler_8h_1afe419fdd19f7194dcf9c9e6d00118224" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* recieve_data</definition>
        <argsstring>(struct network_data *nm)</argsstring>
        <name>recieve_data</name>
        <param>
          <type>struct <ref refid="structnetwork__data" kindref="compound">network_data</ref> *</type>
          <declname>nm</declname>
        </param>
        <briefdescription>
<para>Receives data from UDP server. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nm</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structnetwork__data" kindref="compound">network_data</ref> struct which contains connection info </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>char array which contains data received </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/udp_handler.h" line="37" column="1" bodyfile="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/udp_handler.c" bodystart="59" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="udp__handler_8h_1a3e138ed94c89bd74c249c9f4a1a4c642" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void close_network_manager</definition>
        <argsstring>(struct network_data *nm)</argsstring>
        <name>close_network_manager</name>
        <param>
          <type>struct <ref refid="structnetwork__data" kindref="compound">network_data</ref> *</type>
          <declname>nm</declname>
        </param>
        <briefdescription>
<para>Shutdown active connection, deallocate memory. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nm</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structtcp__network__data" kindref="compound">tcp_network_data</ref> struct which contains connection info </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/udp_handler.h" line="38" column="1" bodyfile="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/udp_handler.c" bodystart="85" bodyend="93"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>UDP_HANDLER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UDP_HANDLER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/param.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/FreeRTOS.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/task.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/event_groups.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_system.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_wifi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_event.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nvs_flash.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_netif.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;protocol_examples_common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;logger.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lwip/err.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lwip/sockets.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lwip/sys.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;lwip/netdb.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="udp__handler_8h_1a0755be366390c472fea523dda78961d3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HOST_IP_ADDR<sp/>CONFIG_UDP_IP_ADDRESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="udp__handler_8h_1a614217d263be1fb1a5f76e2ff7be19a2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PORT<sp/>CONFIG_UDP_PORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structnetwork__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnetwork__data" kindref="compound">network_data</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27" refid="structnetwork__data_1a9346e7a82edd41c346d1528ef301469b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structnetwork__data_1a9346e7a82edd41c346d1528ef301469b" kindref="member">rx_buffer</ref>[128];</highlight></codeline>
<codeline lineno="28" refid="structnetwork__data_1a6e8bd28f3dda27bcedd8b6e39257bf9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structnetwork__data_1a6e8bd28f3dda27bcedd8b6e39257bf9e" kindref="member">addr_str</ref>[128];</highlight></codeline>
<codeline lineno="29" refid="structnetwork__data_1a68f41514e366d2255d8ab802ec4ea146" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structnetwork__data_1a68f41514e366d2255d8ab802ec4ea146" kindref="member">addr_family</ref>;</highlight></codeline>
<codeline lineno="30" refid="structnetwork__data_1a2e35f88440947101eeeb8dc91a43d5e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structnetwork__data_1a2e35f88440947101eeeb8dc91a43d5e5" kindref="member">ip_protocol</ref>;</highlight></codeline>
<codeline lineno="31" refid="structnetwork__data_1a553d72b8506e9098215451adffd330d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/><ref refid="structnetwork__data_1a553d72b8506e9098215451adffd330d4" kindref="member">dest_addr</ref>;</highlight></codeline>
<codeline lineno="32" refid="structnetwork__data_1ab056807bd5bb97ce18f27e6b233de0b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structnetwork__data_1ab056807bd5bb97ce18f27e6b233de0b3" kindref="member">sock</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="udp__handler_8h_1a412aa3402fc47e327861b48a04c3c08a" kindref="member">network_manager</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetwork__data" kindref="compound">network_data</ref>*<sp/>nm);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="udp__handler_8h_1a7ddbd791c1d13c96db95eba36aae6145" kindref="member">send_data</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetwork__data" kindref="compound">network_data</ref>*<sp/>nm,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>payload);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="udp__handler_8h_1afe419fdd19f7194dcf9c9e6d00118224" kindref="member">recieve_data</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetwork__data" kindref="compound">network_data</ref>*<sp/>nm);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="udp__handler_8h_1a3e138ed94c89bd74c249c9f4a1a4c642" kindref="member">close_network_manager</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnetwork__data" kindref="compound">network_data</ref>*<sp/>nm);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/udp_handler.h"/>
  </compounddef>
</doxygen>
