<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="transport_8h" kind="file" language="C++">
    <compoundname>transport.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes refid="udp__handler_8h" local="yes">udp_handler.h</includes>
    <includes refid="json__handler_8h" local="yes">json_handler.h</includes>
    <includes refid="tcp__handler_8h" local="yes">tcp_handler.h</includes>
    <includes local="yes">logger.h</includes>
    <includes local="yes">freertos/FreeRTOS.h</includes>
    <includes local="yes">freertos/task.h</includes>
    <includes local="yes">esp_system.h</includes>
    <includes local="yes">freertos/queue.h</includes>
    <includes local="yes">freertos/event_groups.h</includes>
    <includes local="yes">freertos/semphr.h</includes>
    <includes local="yes">esp_err.h</includes>
    <includes local="yes">protocol_examples_common.h</includes>
    <includedby refid="pid__plotter_8h" local="yes">/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/pid_plotter.h</includedby>
    <includedby refid="plotter_8h" local="yes">/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/plotter.h</includedby>
    <includedby refid="transport_8c" local="yes">/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/transport.c</includedby>
    <incdepgraph>
      <node id="101">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="108">
        <label>nvs_flash.h</label>
      </node>
      <node id="110">
        <label>protocol_examples_common.h</label>
      </node>
      <node id="97">
        <label>stdlib.h</label>
      </node>
      <node id="119">
        <label>tcp_handler.h</label>
        <link refid="tcp__handler_8h"/>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>esp_system.h</label>
      </node>
      <node id="122">
        <label>esp_err.h</label>
      </node>
      <node id="109">
        <label>esp_netif.h</label>
      </node>
      <node id="120">
        <label>freertos/queue.h</label>
      </node>
      <node id="105">
        <label>esp_wifi.h</label>
      </node>
      <node id="117">
        <label>cJSON.h</label>
      </node>
      <node id="115">
        <label>lwip/netdb.h</label>
      </node>
      <node id="99">
        <label>string.h</label>
      </node>
      <node id="107">
        <label>esp_log.h</label>
      </node>
      <node id="100">
        <label>sys/param.h</label>
      </node>
      <node id="113">
        <label>lwip/sockets.h</label>
      </node>
      <node id="114">
        <label>lwip/sys.h</label>
      </node>
      <node id="121">
        <label>freertos/semphr.h</label>
      </node>
      <node id="112">
        <label>lwip/err.h</label>
      </node>
      <node id="106">
        <label>esp_event.h</label>
      </node>
      <node id="102">
        <label>freertos/task.h</label>
      </node>
      <node id="116">
        <label>json_handler.h</label>
        <link refid="json__handler_8h"/>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>udp_handler.h</label>
        <link refid="udp__handler_8h"/>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>stdio.h</label>
      </node>
      <node id="103">
        <label>freertos/event_groups.h</label>
      </node>
      <node id="111">
        <label>logger.h</label>
      </node>
      <node id="96">
        <label>/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h</label>
        <link refid="transport_8h"/>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="127">
        <label>/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/transport.c</label>
        <link refid="transport_8c"/>
      </node>
      <node id="126">
        <label>/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/plotter.c</label>
        <link refid="plotter_8c"/>
      </node>
      <node id="124">
        <label>/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/pid_plotter.h</label>
        <link refid="pid__plotter_8h"/>
      </node>
      <node id="125">
        <label>/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/plotter.h</label>
        <link refid="plotter_8h"/>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h</label>
        <link refid="transport_8h"/>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structpid__terms" prot="public">pid_terms</innerclass>
    <innerclass refid="structdata__recv" prot="public">data_recv</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="transport_8h_1a81a6fc89c7bc286cb7360b155b1901bf" prot="public" static="no">
        <name>MESSAGE_QUEUE_SIZE</name>
        <initializer>CONFIG_MESSAGE_QUEUE_SIZE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h" line="22" column="9" bodyfile="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="transport_8h_1afd5531c3e8b14bff72ce2bb5d9e37afb" prot="public" static="no" mutable="no">
        <type>TaskHandle_t</type>
        <definition>TaskHandle_t pid_transport_handle</definition>
        <argsstring></argsstring>
        <name>pid_transport_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h" line="18" column="1" bodyfile="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="transport_8h_1af69ee3a89d006744edbe8e3039c6210d" prot="public" static="no" mutable="no">
        <type>TaskHandle_t</type>
        <definition>TaskHandle_t pid_const_transport_handle</definition>
        <argsstring></argsstring>
        <name>pid_const_transport_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h" line="18" column="1" bodyfile="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="transport_8h_1a3b6a15c259cc8b4aff104b1ace175fc9" prot="public" static="no" mutable="no">
        <type>QueueHandle_t</type>
        <definition>QueueHandle_t pid_struct_queue</definition>
        <argsstring></argsstring>
        <name>pid_struct_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h" line="19" column="1" bodyfile="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="transport_8h_1a4e23be7e0ba011a32f7896896aaf186e" prot="public" static="no" mutable="no">
        <type>SemaphoreHandle_t</type>
        <definition>SemaphoreHandle_t pid_const_read_write_mutex</definition>
        <argsstring></argsstring>
        <name>pid_const_read_write_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h" line="20" column="1" bodyfile="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="transport_8h_1a73103b87c83e2ad74f75c8e400f58376" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structpid__const" kindref="compound">pid_const</ref></type>
        <definition>struct pid_const pid_const_data</definition>
        <argsstring></argsstring>
        <name>pid_const_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h" line="20" column="1" bodyfile="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="transport_8h_1a320afeaba56579760e7e3185a3d1fa02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t init_queue</definition>
        <argsstring>(void)</argsstring>
        <name>init_queue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialises message queue. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>esp_err_t ESP_OK - if queue init sucessfully, ESP_FAIL - if queue init failed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h" line="40" column="1" bodyfile="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/transport.c" bodystart="10" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="transport_8h_1a6afdab1f1ab02c6ed620949a7d32ffa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_transport</definition>
        <argsstring>(void)</argsstring>
        <name>init_transport</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialises transport, i.e. connect to wifi. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h" line="41" column="1" bodyfile="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/transport.c" bodystart="42" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="transport_8h_1a3d23daa4cae5ba60d838c8a2b785462e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t send_to_queue</definition>
        <argsstring>(struct pid_terms pid_data)</argsstring>
        <name>send_to_queue</name>
        <param>
          <type>struct <ref refid="structpid__terms" kindref="compound">pid_terms</ref></type>
          <declname>pid_data</declname>
        </param>
        <briefdescription>
<para>Sends pid_data struct to message queue. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid_data</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structpid__terms" kindref="compound">pid_terms</ref> struct contains pid values </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t ESP_OK - if queue init sucessfully, ESP_FAIL - if queue init failed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h" line="42" column="1" bodyfile="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/transport.c" bodystart="57" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="transport_8h_1a3f717da7b4c254e710bbfd76625b15e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structdata__recv" kindref="compound">data_recv</ref></type>
        <definition>struct data_recv receive_from_queue</definition>
        <argsstring>(void)</argsstring>
        <name>receive_from_queue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Receive data from queue. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>struct <ref refid="structdata__recv" kindref="compound">data_recv</ref> - struct containing <ref refid="structpid__terms" kindref="compound">pid_terms</ref> and esp_err_t as members. <ref refid="structpid__terms" kindref="compound">pid_terms</ref> contains pid terms </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h" line="42" column="1" bodyfile="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/transport.c" bodystart="83" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="transport_8h_1a56e72500cb37fcbc087c3c3125ab7f8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pid_transport</definition>
        <argsstring>()</argsstring>
        <name>pid_transport</name>
        <briefdescription>
<para>Handles UDP client, which sends <ref refid="structpid__terms" kindref="compound">pid_terms</ref> received through message queue. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h" line="44" column="1" bodyfile="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/transport.c" bodystart="113" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="transport_8h_1acaba133d8c5e0cbadc4cfff68feca9fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pid_const_transport</definition>
        <argsstring>()</argsstring>
        <name>pid_const_transport</name>
        <briefdescription>
<para>Handles TCP client, which receives pid_constants from server, and parses the data and stores it in a global struct pid_const_data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h" line="45" column="1" bodyfile="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/transport.c" bodystart="151" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="transport_8h_1aa37b5765ca807a54890c516c916e7e9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structpid__const" kindref="compound">pid_const</ref></type>
        <definition>struct pid_const pid_const_read</definition>
        <argsstring>()</argsstring>
        <name>pid_const_read</name>
        <briefdescription>
<para>Returns pid_const_data struct. Checks if the resource is blocked by mutex for writing or it is accessible, waits till pid_const_data is accessible and returns it. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>struct <ref refid="structpid__const" kindref="compound">pid_const</ref> - Returns pid_const_data, can be used to access Kp, Ki, Kd and current values </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h" line="45" column="1" bodyfile="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/transport.c" bodystart="209" bodyend="224"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>TRANSPORT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRANSPORT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="udp__handler_8h" kindref="compound">udp_handler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="json__handler_8h" kindref="compound">json_handler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tcp__handler_8h" kindref="compound">tcp_handler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;logger.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/FreeRTOS.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/task.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_system.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/queue.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/event_groups.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/semphr.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_err.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;protocol_examples_common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="transport_8h_1afd5531c3e8b14bff72ce2bb5d9e37afb" refkind="member"><highlight class="normal">TaskHandle_t<sp/><ref refid="transport_8h_1afd5531c3e8b14bff72ce2bb5d9e37afb" kindref="member">pid_transport_handle</ref>,<sp/><ref refid="transport_8h_1af69ee3a89d006744edbe8e3039c6210d" kindref="member">pid_const_transport_handle</ref>;</highlight></codeline>
<codeline lineno="19" refid="transport_8h_1a3b6a15c259cc8b4aff104b1ace175fc9" refkind="member"><highlight class="normal">QueueHandle_t<sp/><ref refid="transport_8h_1a3b6a15c259cc8b4aff104b1ace175fc9" kindref="member">pid_struct_queue</ref>;</highlight></codeline>
<codeline lineno="20" refid="transport_8h_1a4e23be7e0ba011a32f7896896aaf186e" refkind="member"><highlight class="normal">SemaphoreHandle_t<sp/><ref refid="transport_8h_1a4e23be7e0ba011a32f7896896aaf186e" kindref="member">pid_const_read_write_mutex</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="transport_8h_1a81a6fc89c7bc286cb7360b155b1901bf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MESSAGE_QUEUE_SIZE<sp/>CONFIG_MESSAGE_QUEUE_SIZE<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="structpid__terms" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpid__terms" kindref="compound">pid_terms</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25" refid="structpid__terms_1ab4c7f8712a43d4fe1b8932783f286c22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structpid__terms_1ab4c7f8712a43d4fe1b8932783f286c22" kindref="member">current</ref>;</highlight></codeline>
<codeline lineno="26" refid="structpid__terms_1a8073092d43a680432fa0f7784a7aef29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structpid__terms_1a8073092d43a680432fa0f7784a7aef29" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="27" refid="structpid__terms_1af930983320efcf1d96d3b7cb85fee908" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structpid__terms_1af930983320efcf1d96d3b7cb85fee908" kindref="member">P</ref>;</highlight></codeline>
<codeline lineno="28" refid="structpid__terms_1af72ae69eaa9faeab7273dcbd847fdee9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structpid__terms_1af72ae69eaa9faeab7273dcbd847fdee9" kindref="member">I</ref>;</highlight></codeline>
<codeline lineno="29" refid="structpid__terms_1a864b7035292cd484f321d0f52a5a68d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structpid__terms_1a864b7035292cd484f321d0f52a5a68d8" kindref="member">D</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structdata__recv" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdata__recv" kindref="compound">data_recv</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34" refid="structdata__recv_1af60b2e3d44df4ef57e1998ff55783920" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpid__terms" kindref="compound">pid_terms</ref><sp/>data;</highlight></codeline>
<codeline lineno="35" refid="structdata__recv_1a96d1938d8172e27035f655727f675273" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/><ref refid="structdata__recv_1a96d1938d8172e27035f655727f675273" kindref="member">err</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="transport_8h_1a73103b87c83e2ad74f75c8e400f58376" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpid__const" kindref="compound">pid_const</ref><sp/><ref refid="transport_8h_1a73103b87c83e2ad74f75c8e400f58376" kindref="member">pid_const_data</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">esp_err_t<sp/><ref refid="transport_8h_1a320afeaba56579760e7e3185a3d1fa02" kindref="member">init_queue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="transport_8h_1a6afdab1f1ab02c6ed620949a7d32ffa4" kindref="member">init_transport</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">esp_err_t<sp/><ref refid="transport_8h_1a3d23daa4cae5ba60d838c8a2b785462e" kindref="member">send_to_queue</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structpid__terms" kindref="compound">pid_terms</ref><sp/>pid_data);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdata__recv" kindref="compound">data_recv</ref><sp/><ref refid="transport_8h_1a3f717da7b4c254e710bbfd76625b15e4" kindref="member">receive_from_queue</ref>(void);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="transport_8h_1a56e72500cb37fcbc087c3c3125ab7f8e" kindref="member">pid_transport</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="transport_8h_1acaba133d8c5e0cbadc4cfff68feca9fc" kindref="member">pid_const_transport</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpid__const" kindref="compound">pid_const</ref><sp/><ref refid="transport_8h_1aa37b5765ca807a54890c516c916e7e9b" kindref="member">pid_const_read</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/vedant/Programming/projects/pid-tuning-gui/esp_codes/components/pid_plotter/include/transport.h"/>
  </compounddef>
</doxygen>
